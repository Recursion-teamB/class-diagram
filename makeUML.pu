@startuml

class Card{
    -String suit
    -String number
    +String toString()
    +String getSuit()
    +String getNumber()
    +number getValue()
}

class Deck{
    -Card[] deck

    Deck()
    Card[] create()
    void shuffle()
    +String toString()
    +Card draw()
    Card[] divideDeck()
}

class Player{
    #String name
    #Card[] hand
    #String type
    #number score

    +String getName()
    +Card[] getHand()
    +String getType()
    +number getScore()
    +number setScore()
    +number addScore()
}

class Table{
    Player[] players
    Deck deck
}

package Speed{
    class SpeedPlayer extends Player{
        Card[] HalfDeck
        Card dragAndDropCard()
        Card drawCard()
    }

    class SpeedTable extends Table{
        SpeedPlayer[] speedPlayers
        Card[] field
        Card[] dealCards()
        void addCardInHands()
        void updateField()
    }

    class SpeedView {
        void displayStart()
        void displayEnd()
        void displayDragAndDrop()
        void displayDrawCard()
        void displayUpdateField()
    }
    class SpeedController {
        Boolean isEndGame
        Boolean judgeCanHandOn

        void startGame()
        Boolean isEndGame()
        void endGame()

        void dealCards()
        void addCardInHands()
        void updateField()
        void aiControll()
        Boolean judgeCanHandOn()
        void handOnSameTime()
    }
    SpeedController -- SpeedView
    SpeedController o-- SpeedTable
    SpeedTable o-- SpeedPlayer
}



package poker{
    class PokerPlayer extends Player{
        -number wager
        +void changeHand()
        +number getWager()
        +void setWager()
        +number[] getRole()
    }
    class PokerTable extends Table{
        PokerPlayer[] pokerPlayers
        number pokerPot
        void addPlayer()
    }

    class PokerView{
        displayStart()
        displayEnd()
        displayPot()
        displayBet()
        displayFold()
        displayRaise()
        displayWin()
        displayLose()
    }

    class PokerController{
        number rounds
        void startGame()
        Boolean isEndGame()
        void endGame()
        void countRound()
    }
    PokerController -- PokerView
    PokerController o-- PokerTable
    PokerTable o-- PokerPlayer
    PokerTable o-- PokerPot
}

package BlackJack {
    class BlackJackPlayer extends Player {
        String gameStatus

        Number bet()
        Number addChip()
        Number getHandScore()
        Command selectCommand()
    }

    class BlackJackTable extends Table {
        Player house
        Number roundNumber
        Number turnNumber
        String phase
        Number[] bets

        void victoryJudge()
        void judgeHand()
        void setBets()
        void setBlackJack()
        Card deal()
    }

    class Command {
        String command
        Number amount
    }

    class BlackJackView {
        displayHit()
        displayStay()
        displayDouble()
        displayeSurrender()
    }

    class BlackJackcontoller {
        void startGame()
        void endGame()
    }
    BlackJackcontoller o-- BlackJackTable
    BlackJackcontoller -- BlackJackView
    BlackJackTable o-- BlackJackPlayer
    BlackJackPlayer o-- Command
}

package Texas holdem {
    class TexasPlayer extends Player{
        String gameStatus

        Number bet()
        Number addchip()
        String getHandRole()
        Command selectCommand()
    }

    class TexasTable extends Table {
        Player house
        Number roundNumber
        Number turnNumber
        String phase
        Number[] bets
        Card[] communityCards

        void victoryJudge()
        void judgeHnad()
        void setBets()
        Card deal()
    }

    class Command {
        String command
        Number amound
    }

    class Role {
        Card[] cards
        Number judge()
    }

    class TexasView {
        displayRole()
    }

    class TexasController {
        void startGame()
        void endGame()
    }
    TexasTable o-- TexasPlayer
    TexasPlayer o-- Role
}

Deck o-- Card
Table o-- Deck
Player o-- Card
Table o-- Player
SpeedTable o-- Deck
SpeedTable o-- Card

package War{
    class warPlayer extends Player{
        -Card deck
        +Card drawCard()
    }

    class warTable extends Table{
        -warPlayer[] warPlayers
        +number compareCards()
    }

    class warController{
        +void startGame()
        +void endGame()
    }

    class warView{
    + void drawInit()
    + void showDrawnCard()
    + void clearTable()
    + void drawResult()
    }

    warView --- warController
    warTable o-- warPlayer
    warController o-- warTable
}

@enduml
